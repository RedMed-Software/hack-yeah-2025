// <auto-generated />
using System;
using System.Collections.Generic;
using HackYeah2025.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HackYeah2025.Migrations
{
    [DbContext(typeof(HackYeahDbContext))]
    [Migration("20251004171515_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HackYeah2025.Infrastructure.Models.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("DateFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateTo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("HackYeah2025.Infrastructure.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("FoundedYear")
                        .HasColumnType("integer");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("Mission")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Programs")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5d1f3c76-7a10-4fb4-a4a1-0d5710a98b72"),
                            FoundedYear = 2012,
                            Location = "Centrum Aktywności Społecznej\nul. Solidarności 27\nWarszawa",
                            Mission = "Wspieramy młodych liderów w rozwijaniu projektów społecznych, łącząc edukację obywatelską z działaniem w terenie.",
                            Name = "Fundacja Młodzi Działają",
                            Programs = "inkubator projektów, mikrogranty sąsiedzkie, akademia wolontariatu",
                            Website = "https://mlodzi-dzialaja.pl"
                        });
                });

            modelBuilder.Entity("HackYeah2025.Infrastructure.Models.Organizer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Languages")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uuid");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Specializations")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Organizers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4b1846cf-3c3a-4939-85f9-884f48216dfb"),
                            Email = "marta.zawadzka@mlodzi-dzialaja.pl",
                            FullName = "Marta Zawadzka",
                            Languages = "polski, angielski",
                            OrganizationId = new Guid("5d1f3c76-7a10-4fb4-a4a1-0d5710a98b72"),
                            Phone = "+48 501 222 198",
                            Role = "Koordynatorka programu",
                            Specializations = "partycypacja młodzieży, partnerstwa lokalne"
                        });
                });

            modelBuilder.Entity("HackYeah2025.Infrastructure.Models.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.ToTable("Tags", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9a3e0ca5-579f-49ba-a479-76a519e5c08a"),
                            Name = "Integracja młodzieży"
                        },
                        new
                        {
                            Id = new Guid("0b93ef04-03ea-4bb8-8aa4-2a0d9c51bfb3"),
                            Name = "Wsparcie seniorów"
                        },
                        new
                        {
                            Id = new Guid("1a6d420a-4851-45ce-b756-609d0c48e1c6"),
                            Name = "Wydarzenia kulturalne"
                        },
                        new
                        {
                            Id = new Guid("1d8cb68b-20da-4c4c-93f0-326f0f7a086b"),
                            Name = "Edukacja obywatelska"
                        });
                });

            modelBuilder.Entity("HackYeah2025.Infrastructure.Models.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("HackYeah2025.Infrastructure.Models.Volunteer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Dictionary<string, string>>("Availability")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<Dictionary<string, string>>("Languages")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("PreferredRoles")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<Dictionary<string, string>>("Skills")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Transport")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.ToTable("Volunteers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9f064bb8-162d-4e49-88f5-2e5f5f9a7ab8"),
                            Availability = new Dictionary<string, string> { ["tuesday_thursday"] = "Wtorki i czwartki 16:00 – 20:00", ["weekends"] = "Weekendy według ustaleń" },
                            Description = "Doświadczona wolontariuszka wspierająca projekty międzypokoleniowe oraz wydarzenia edukacyjne.",
                            Email = "julia.nowak@mlodzidzialaja.pl",
                            FirstName = "Julia",
                            Languages = new Dictionary<string, string> { ["Polski"] = "C2", ["Angielski"] = "C1", ["Ukraiński"] = "B1" },
                            LastName = "Nowak",
                            Phone = "+48 511 222 333",
                            PreferredRoles = "Koordynacja wolontariuszy, prowadzenie warsztatów, moderacja spotkań",
                            Skills = new Dictionary<string, string> { ["Komunikacja i moderacja"] = "Zaawansowany", ["Animacja czasu wolnego"] = "Średniozaawansowany", ["Pierwsza pomoc"] = "Podstawowy", ["Planowanie wydarzeń"] = "Zaawansowany" },
                            Transport = "Rower, komunikacja miejska, możliwość dojazdu do 20 km"
                        });
                });

            modelBuilder.Entity("HackYeah2025.Infrastructure.Models.VolunteerDistinction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid>("VolunteerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("VolunteerId");

                    b.ToTable("VolunteerDistinctions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d5fdf09-04ac-4b76-bbef-f5fb3787e6bf"),
                            Description = "Wyróżnienie za 120 godzin pracy z młodzieżą i seniorami w 2024 roku.",
                            Title = "Nagroda \"Wolontariusz roku\"",
                            VolunteerId = new Guid("9f064bb8-162d-4e49-88f5-2e5f5f9a7ab8")
                        },
                        new
                        {
                            Id = new Guid("9e0c6883-9461-4d6f-b6f2-f2de4f6dd0a4"),
                            Description = "Ukończony kurs Polskiego Czerwonego Krzyża, obejmujący scenariusze miejskie.",
                            Title = "Certyfikat z pierwszej pomocy",
                            VolunteerId = new Guid("9f064bb8-162d-4e49-88f5-2e5f5f9a7ab8")
                        });
                });

            modelBuilder.Entity("HackYeah2025.Infrastructure.Models.VolunteerTag", b =>
                {
                    b.Property<Guid>("VolunteerId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.HasKey("VolunteerId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("VolunteerTags", (string)null);

                    b.HasData(
                        new
                        {
                            VolunteerId = new Guid("9f064bb8-162d-4e49-88f5-2e5f5f9a7ab8"),
                            TagId = new Guid("9a3e0ca5-579f-49ba-a479-76a519e5c08a")
                        },
                        new
                        {
                            VolunteerId = new Guid("9f064bb8-162d-4e49-88f5-2e5f5f9a7ab8"),
                            TagId = new Guid("0b93ef04-03ea-4bb8-8aa4-2a0d9c51bfb3")
                        },
                        new
                        {
                            VolunteerId = new Guid("9f064bb8-162d-4e49-88f5-2e5f5f9a7ab8"),
                            TagId = new Guid("1a6d420a-4851-45ce-b756-609d0c48e1c6")
                        },
                        new
                        {
                            VolunteerId = new Guid("9f064bb8-162d-4e49-88f5-2e5f5f9a7ab8"),
                            TagId = new Guid("1d8cb68b-20da-4c4c-93f0-326f0f7a086b")
                        });
                });

            modelBuilder.Entity("HackYeah2025.Infrastructure.Models.Organizer", b =>
                {
                    b.HasOne("HackYeah2025.Infrastructure.Models.Organization", "Organization")
                        .WithMany("Organizers")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("HackYeah2025.Infrastructure.Models.Task", b =>
                {
                    b.HasOne("HackYeah2025.Infrastructure.Models.Event", null)
                        .WithMany("Tasks")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HackYeah2025.Infrastructure.Models.VolunteerDistinction", b =>
                {
                    b.HasOne("HackYeah2025.Infrastructure.Models.Volunteer", "Volunteer")
                        .WithMany("Distinctions")
                        .HasForeignKey("VolunteerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Volunteer");
                });

            modelBuilder.Entity("HackYeah2025.Infrastructure.Models.VolunteerTag", b =>
                {
                    b.HasOne("HackYeah2025.Infrastructure.Models.Tag", "Tag")
                        .WithMany("VolunteerTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HackYeah2025.Infrastructure.Models.Volunteer", "Volunteer")
                        .WithMany("VolunteerTags")
                        .HasForeignKey("VolunteerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("Volunteer");
                });

            modelBuilder.Entity("HackYeah2025.Infrastructure.Models.Event", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("HackYeah2025.Infrastructure.Models.Organization", b =>
                {
                    b.Navigation("Organizers");
                });

            modelBuilder.Entity("HackYeah2025.Infrastructure.Models.Tag", b =>
                {
                    b.Navigation("VolunteerTags");
                });

            modelBuilder.Entity("HackYeah2025.Infrastructure.Models.Volunteer", b =>
                {
                    b.Navigation("Distinctions");

                    b.Navigation("VolunteerTags");
                });
#pragma warning restore 612, 618
        }
    }
}
