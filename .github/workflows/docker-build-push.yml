name: Build and Push Docker Image

on:
  workflow_call:
    inputs:
      branch:
        description: 'Select branch'
        required: false
        type: string
        default: 'main'
      image_name:
        required: true
        type: string
      event_name:
        required: true
        type: string
      context:
        description: 'Docker build context (default: .)'
        required: false
        type: string
        default: '.'
      dockerfile:
        description: 'Path to Dockerfile (default: ./Dockerfile)'
        required: false
        type: string
        default: './Dockerfile'
      add_build_time:
        description: 'Whether to include BUILD_TIME build arg'
        required: false
        type: boolean
        default: false
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ inputs.image_name }}
      COMMIT_TAG: ${{ inputs.event_name == 'workflow_dispatch' && inputs.branch || github.ref_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.event_name == 'workflow_dispatch' && inputs.branch || github.ref }}

      - name: Sanitize COMMIT_TAG
        run: echo "COMMIT_TAG=${COMMIT_TAG//\//-}" >> $GITHUB_ENV

      - name: Get Git short commit hash (REVISION)
        id: get_revision
        run: echo "REVISION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Set build metadata
        id: meta
        run: echo "build_time=$(date +'%Y-%m-%d_%H:%M:%S')" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and tag image
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          build-args: |
            REVISION=${{ env.REVISION }}
            ${{ inputs.add_build_time && format('BUILD_TIME={0}', steps.meta.outputs.build_time) }}
          labels: |
            org.opencontainers.image.created=${{ steps.meta.outputs.build_time }}
            org.opencontainers.image.revision=${{ env.REVISION }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.ref.name=${{ env.COMMIT_TAG }}
          tags: ${{ env.IMAGE_NAME }}:${{ env.COMMIT_TAG }}
          cache-from: type=gha,scope=${{ env.IMAGE_NAME }}
          cache-to: type=gha,mode=max,scope=${{ env.IMAGE_NAME }}
          push: true
          load: true
          
      - name: Save image as artifact
        run: docker save ${{ inputs.image_name }}:${{ inputs.branch }} -o image.tar

      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.image_name }}
          path: image.tar
