@use 'sass:color';
@use '../main' as *;

.page {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  width: 100%;
}

.hero {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  background: linear-gradient(135deg, rgba($color-primary-start, 0.12), rgba($color-secondary, 0.12));
  border-radius: $border-radius;
  padding: 1.5rem;
  box-shadow: 0 12px 24px rgba($color-primary-mid, 0.08);
}

.identity {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.avatar {
  min-width: 64px;
  width: 64px;
  min-height: 64px;
  border-radius: 50%;
  background: linear-gradient(135deg, $color-primary-start, $color-primary-mid);
  color: #fff;
  font-weight: 700;
  font-size: 1.5rem;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.identityDetails {
  display: flex;
  flex-direction: column;
  gap: 0.35rem;
}

.role {
  font-size: 0.85rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.08em;
  color: $color-primary-mid;
}

.actions {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.primaryAction,
.secondaryAction,
.linkButton {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.75rem 1.25rem;
  border-radius: $border-radius;
  font-weight: 600;
  border: 1px solid transparent;
  cursor: pointer;
  transition: transform 0.2s ease, box-shadow 0.2s ease, background-color 0.2s ease;
}

.primaryAction {
  background: linear-gradient(135deg, $color-primary-start, $color-secondary);
  color: #fff;
  box-shadow: 0 10px 20px rgba($color-secondary, 0.2);
}

.primaryAction:hover,
.primaryAction:focus {
  transform: translateY(-1px);
  box-shadow: 0 12px 24px rgba($color-secondary, 0.25);
  outline: none;
}

.secondaryAction {
  background: rgba($color-primary-mid, 0.1);
  color: $color-primary-mid;
  border-color: rgba($color-primary-mid, 0.2);
}

.secondaryAction:hover,
.secondaryAction:focus {
  background: rgba($color-primary-mid, 0.2);
  outline: none;
}

.metrics {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
  gap: 1rem;
}

.metric {
  background: $color-bg;
  border-radius: $border-radius;
  padding: 1.25rem 1rem;
  box-shadow: 0 6px 18px rgba($color-primary-mid, 0.06);
  display: flex;
  flex-direction: column;
  gap: 0.4rem;
}

.metricValue {
  font-size: 1.5rem;
  font-weight: 700;
  color: $color-primary-start;
}

.metricLabel {
  font-size: 0.95rem;
  color: color.adjust($color-text, $lightness: -10%);
}

.sections {
  display: grid;
  gap: 1.5rem;
}

.mainColumn,
.sideColumn {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.card {
  background: $color-bg;
  border-radius: $border-radius;
  padding: 1.5rem;
  box-shadow: 0 10px 24px rgba($color-primary-mid, 0.06);
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.tags {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  padding: 0;
  margin: 0;
  list-style: none;
}

.tags li {
  background: rgba($color-accent, 0.15);
  color: color.adjust($color-secondary, $lightness: -10%);
  padding: 0.45rem 0.75rem;
  border-radius: 999px;
  font-weight: 600;
  font-size: 0.9rem;
}

.detailGrid {
  display: grid;
  gap: 1.25rem;
}

.detailGrid div {
  display: flex;
  flex-direction: column;
  gap: 0.35rem;
}

.shiftList,
.skillsList,
.achievementsList {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.shiftItem {
  display: flex;
  flex-direction: column;
  gap: 0.35rem;
  padding-bottom: 1rem;
  border-bottom: 1px solid rgba($color-primary-mid, 0.1);
}

.shiftItem:last-child {
  border-bottom: none;
  padding-bottom: 0;
}

.shiftHeader {
  display: flex;
  flex-direction: column;
  gap: 0.4rem;
}

.shiftHeader h3 {
  margin: 0;
  font-size: 1.05rem;
}

.shiftStatus {
  align-self: flex-start;
  padding: 0.25rem 0.6rem;
  border-radius: 999px;
  background: rgba($color-green, 0.1);
  color: $color-green;
  font-size: 0.85rem;
  font-weight: 600;
}

.shiftMeta {
  display: flex;
  flex-wrap: wrap;
  gap: 0.75rem;
  font-size: 0.95rem;
  color: color.adjust($color-text, $lightness: -5%);
}

.timeline {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  gap: 1.25rem;
  position: relative;
}

.timeline::before {
  content: '';
  position: absolute;
  left: 0.6rem;
  top: 0.25rem;
  bottom: 0.25rem;
  width: 2px;
  background: rgba($color-primary-mid, 0.2);
}

.timelineItem {
  display: grid;
  grid-template-columns: auto 1fr;
  gap: 1rem;
  position: relative;
  padding-left: 1.5rem;
}

.timelineItem::before {
  content: '';
  position: absolute;
  left: 0.2rem;
  top: 0.4rem;
  width: 0.8rem;
  height: 0.8rem;
  border-radius: 50%;
  background: $color-primary-start;
  box-shadow: 0 0 0 4px rgba($color-primary-start, 0.15);
}

.timelineDate {
  font-weight: 600;
  color: color.adjust($color-text, $lightness: -10%);
  font-size: 0.9rem;
}

.skillItem {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
  padding: 0.75rem 1rem;
  border-radius: $border-radius;
  background: rgba($color-primary-mid, 0.08);
}

.skillLevel {
  font-size: 0.85rem;
  font-weight: 600;
  color: $color-primary-mid;
}

.achievementItem h3 {
  margin: 0;
}

.definitionList {
  margin: 0;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.definitionList div {
  display: flex;
  flex-direction: column;
  gap: 0.35rem;
}

a {
  color: $color-primary-start;
  font-weight: 600;
  text-decoration: none;
}

a:hover,
a:focus {
  text-decoration: underline;
}

.linkButton {
  background: rgba($color-primary-start, 0.1);
  color: $color-primary-start;
  border-color: rgba($color-primary-start, 0.2);
  padding-left: 1rem;
  padding-right: 1rem;
}

.linkButton:hover,
.linkButton:focus {
  background: rgba($color-primary-start, 0.2);
  outline: none;
}

@media (min-width: 720px) {
  .hero {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
  }

  .actions {
    flex-direction: row;
  }

  .sections {
    grid-template-columns: minmax(0, 1fr) minmax(0, 360px);
  }

  .detailGrid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

@media (min-width: 1024px) {
  .hero {
    padding: 2rem;
  }

  .metric {
    padding: 1.5rem;
  }

  .card {
    padding: 2rem;
  }
}
